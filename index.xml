<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Teruru Laboratory</title><link>https://teruru-52.github.io/</link><description>Recent content on Teruru Laboratory</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Tue, 22 Mar 2022 04:36:23 +0900</lastBuildDate><atom:link href="https://teruru-52.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>曲線加速を用いた超信地旋回</title><link>https://teruru-52.github.io/post/2022-03-22-rotation-curved-acceleration/</link><pubDate>Tue, 22 Mar 2022 04:36:23 +0900</pubDate><guid>https://teruru-52.github.io/post/2022-03-22-rotation-curved-acceleration/</guid><description>MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}}); なめらかな加速の設計を参考にしました。
$\dfrac{\pi}{2}$だけ超信地旋回する際の曲線加速の設計に適用します。
1. 目標値の関数を求める 角躍度, 角加速度, 角速度、角度の目標値をそれぞれ$j_{ref}(t), a_{ref}(t), \omega_{ref}(t), \theta_{ref}(t)$ とします。 $$ \begin{align} j_{ref}(t) &amp; := \left\{ \begin{array}{ll} j_m &amp; (0 2. パラメータを決定する $t_1,t_2,t_3,j_m,a_m$を決定するします。(ただし, $t_1=t_3-t_2=\dfrac{a_m}{j_m}$)
とりあえずMATLABで描画しながら次のようにパラメータを決定しました。
$$t_1=0.03[s]$$
$$t_2=0.07[s]$$
$$t_3=0.1[s]$$
$$j_m=3500[rad/s^3]$$
$$a_m=105[rad/s^2]$$
これらを決定したとき$\omega_3=7.35[rad/s]$となりました。
3. 角速度の積分値が$\dfrac{\pi}{2}$となるように設計する 最大（一定）角速度$\omega_3$である時間で回転角を調整します。時刻$t_4$まで$\omega_3$であるとすると, 角速度の積分値となる面積$S$は次式で表されます。
$$S=2\left\{\omega_1(t_2-t_1)+\dfrac{1}{2}a_m(t_2-t_1)^2+\omega_3(t_3-t_2)\right\}+\omega_3(t_4-t_3)$$ $S=\dfrac{\pi}{2}$となるように$t_4=213[ms]$と求めました。 $t_4は$整数で求まらなかったので四捨五入しました。
$\pi$回転する超信地旋回では$S=\pi$として$t_4$を求めます。
4.　マイコンで目標値を生成する マイコンで生成した目標値をMATLABでplotしました。
角速度 角加速度 角躍度 5. 2自由度制御を設計する まず, 回転方向のシステム同定をします。 同定については以下の記事を参考にさせていただきました。
マイクロマウスの機体を同定する
MATLABでマイクロマウスの機体をシステム同定してPIDチューニングする
1次の極をもつとして同定しました。 $$P_M(s)=\dfrac{K}{bs+1}$$ 2自由度制御によって目標値に追従させることにします。 $P_M^{-1}(s)$は非プロパーなので, 理論上では1次のフィルタを入れるなどしてフィードフォワードコントローラをプロパーにする必要がありますが, とりあえずフィルタを入れずに$F(s)=1$として考えます。
フィードバック 角速度の誤差にPID制御をかけます。 $$e_{\omega}=\omega_{ref}-\omega$$</description></item><item><title>Site Map</title><link>https://teruru-52.github.io/site-map/</link><pubDate>Tue, 22 Mar 2022 04:11:10 +0900</pubDate><guid>https://teruru-52.github.io/site-map/</guid><description/></item><item><title>About</title><link>https://teruru-52.github.io/about/</link><pubDate>Tue, 22 Mar 2022 03:59:48 +0900</pubDate><guid>https://teruru-52.github.io/about/</guid><description>Profile Manager: Teruru
はじめに Teruruです。電子工作、制御、プログラミング（C,C++,Python)によるものつくりを紹介していきます。
過去作品 二輪倒立振子 フライホイール倒立振子 ドローン 作りたいもの アンプ 3次元倒立振子 ヘキサドローン倒立振子 クラシックマウス ロボトレース</description></item><item><title>IIRフィルタの設計</title><link>https://teruru-52.github.io/post/2022-03-22-iir-filter/</link><pubDate>Tue, 22 Mar 2022 03:48:06 +0900</pubDate><guid>https://teruru-52.github.io/post/2022-03-22-iir-filter/</guid><description> MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}}); 低域のIIRフィルタを設計し、ジャイロセンサに適用します。ここではまずプロトタイプフィルタを考え、双1次z変換によって目的のフィルタを求める手法を用います。
1. 設計仕様を与える カットオフ周波数を100Hz、阻止域端周波数を300Hz、阻止域減衰量を30dBとします。
2. 正規化角周波数を求める サンプリング周期を1msとして正規化します。
3. プロトタイプフィルタの次数を決定する $$t_m$$
4. 双1次z変換で目的のフィルタを求める</description></item></channel></rss>