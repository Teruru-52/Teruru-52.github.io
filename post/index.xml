<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Teruru Laboratory</title><link>https://teruru-52.github.io/post/</link><description>Recent content in Posts on Teruru Laboratory</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Tue, 22 Mar 2022 04:36:23 +0900</lastBuildDate><atom:link href="https://teruru-52.github.io/post/index.xml" rel="self" type="application/rss+xml"/><item><title>曲線加速を用いた超信地旋回</title><link>https://teruru-52.github.io/post/2022-03-22-rotation-curved-acceleration/</link><pubDate>Tue, 22 Mar 2022 04:36:23 +0900</pubDate><guid>https://teruru-52.github.io/post/2022-03-22-rotation-curved-acceleration/</guid><description>MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}}); なめらかな加速の設計を参考にしました。
$\dfrac{\pi}{2}$だけ超信地旋回する際の曲線加速の設計に適用します。
1. 目標値の関数を求める 角躍度, 角加速度, 角速度, 角度の目標値をそれぞれ$j_{ref}(t), a_{ref}(t), \omega_{ref}(t), \theta_{ref}(t)$ とします。 $$ \begin{align} j_{ref}(t) &amp; := \left\{ \begin{array}{ll} j_m &amp; (0 2. パラメータを決定する $t_1,t_2,t_3,j_m,a_m$を決定します。(ただし, $t_1=t_3-t_2=\dfrac{a_m}{j_m}$)
とりあえずMATLABで描画しながら次のようにパラメータを決定しました。
$$t_1=0.03[s]$$
$$t_2=0.07[s]$$
$$t_3=0.1[s]$$
$$j_m=3500[rad/s^3]$$
$$a_m=105[rad/s^2]$$
これらを決定したとき$\omega_3=7.35[rad/s]$となりました。
3. 角速度の積分値が$\dfrac{\pi}{2}$となるように設計する 最大（一定）角速度$\omega_3$である時間で回転角を調整します。時刻$t_4$まで$\omega_3$であるとすると, 角速度の積分値となる面積$S$は次式で表されます。
$$S=2\left\{\omega_1(t_2-t_1)+\dfrac{1}{2}a_m(t_2-t_1)^2+\omega_3(t_3-t_2)\right\}+\omega_3(t_4-t_3)$$ $S=\dfrac{\pi}{2}$となるように$t_4=213[ms]$と求めました。 $t_4は$整数で求まらなかったので四捨五入しました。
$\pi$回転する超信地旋回では$S=\pi$として$t_4$を求めます。
4. マイコンで目標値を生成する マイコンで生成した目標値をMATLABでplotしました。
角速度 角加速度 角躍度 5. 2自由度制御を設計する まず, 回転方向のシステム同定をします。 同定については以下の記事を参考にさせていただきました。
マイクロマウスの機体を同定する
MATLABでマイクロマウスの機体をシステム同定してPIDチューニングする
1次の極をもつとして同定しました。 $$P_M(s)=\dfrac{K}{bs+1}$$ 2自由度制御によって目標値に追従させることにします。 $P_M^{-1}(s)$は非プロパーなので, 理論上では1次のフィルタを入れるなどしてフィードフォワードコントローラをプロパーにする必要がありますが, とりあえずフィルタを入れずに$F(s)=1$として考えます。
フィードバック 角速度の誤差にPID制御をかけます。 $$e_{\omega}=\omega_{ref}-\omega$$</description></item><item><title>IIRフィルタの設計</title><link>https://teruru-52.github.io/post/2022-03-22-iir-filter/</link><pubDate>Tue, 22 Mar 2022 03:48:06 +0900</pubDate><guid>https://teruru-52.github.io/post/2022-03-22-iir-filter/</guid><description>MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}}); 低域のIIRフィルタを設計し、ジャイロセンサに適用します。ここではまずプロトタイプフィルタを考え、双1次z変換によって目的のディジタルフィルタを求める手法を用います。
1. 設計仕様を与える カットオフ周波数 $f_c=100\ [\text{Hz}]$、阻止域端周波数 $f_s=300\ [\text{Hz}]$、阻止域減衰量 $A_s=30\ [\text{dB}]$とします。
2. 正規化角周波数を求める $f_c, f_s$は非正規化周波数であり, サンプリング周波数$F_s$を$1$とするように正規化して扱う必要があります.
ここでは, サンプリング周波数$F_s=1\ [\text{kHz}]$として正規化します。$f_c, f_s$に対応する正規化角周波数$\omega_c, \omega_s$は次のようになります。
$$\omega_c=2\pi \dfrac{f_c}{F_s}=0.2\pi\ [\text{rad}]$$
$$\omega_s=2\pi \dfrac{f_s}{F_s}=0.6\pi\ [\text{rad}]$$
3. プリワーピングをする 双1次z変換ではアナログフィルタの周波数 $\Omega=-\infty〜\infty$の範囲をディジタルフィルタの周波数 $\omega=-\pi〜\pi$の範囲に対応させるため, 周波数のひずみ（ワーピング）が生じます。そのため, ディジタルフィルタでの設計仕様 $\omega_c, \omega_s$を, アナログフィルタでの設計仕様となるように対応させる必要があります。これをプリワーピングといいます。ひずみが生じても設計仕様を満たすように前もってひずみをもたせておく, ということです。
周波数のひずみについて考えます。双1次z変換は次式で表されます.
$$s=2\dfrac{1-z^{-1}}{1+z^{-1}}$$
$s=j\Omega,\ z=e^{j\omega}$として周波数軸で考えると
$$j\Omega=2\dfrac{1-e^{-j\omega}}{1+e^{-j\omega}}$$
となり, 周波数のひずみは
$$\Omega=2\text{tan}\dfrac{\omega}{2}$$
となります。$\omega_c, \omega_s$をプリワーピングしてアナログフィルタでの設計仕様$\Omega_c, \Omega_s$とします。
$$\Omega_c=2\text{tan}\dfrac{\omega_c}{2},\ \Omega_s=2\text{tan}\dfrac{\omega_s}{2}$$
4. プロトタイプフィルタを求める まず, ディジタルフィルタの設計の基礎となるアナログフィルタであるプロトタイプフィルタを考えます。 ここでは, バタワース低域フィルタを用いることにします。プロトタイプフィルタを1回求めておけば, 周波数変換によって所望のカットオフ周波数のディジタルフィルタに変更することもできます。
バタワース低域フィルタの設計では, 理想低域フィルタの特性に近似するために次の振幅特性が用いられます。 $N$はフィルタの次数です。
$$|H_a(j\Omega)|=\frac{1}{\sqrt{1+\bigg(\dfrac{\Omega}{\Omega_c}\bigg)^{2N}}}$$ 設計仕様を満たすことができる次数$N$を求めます。$\Omega_s$における振幅が$A_s$より減衰していればよいので,
$$|H_a(j\Omega_s)|=\frac{1}{\sqrt{1+\bigg(\dfrac{\Omega_s}{\Omega_c}\bigg)^{2N}}}$$ $$A_s=-20\ \text{log}_{10}|H_a(j\Omega_s)|=10\ \text{log}_{10}\left\{1+\bigg(\dfrac{\Omega_s}{\Omega_c}\bigg)^{2N}\right\}$$ $$N=\dfrac{1}{2}\dfrac{\text{log}_{10}(10^{\frac{A_s}{10}}-1)}{\text{log}_{10}\bigg(\dfrac{\Omega_s}{\Omega_c}\bigg)}$$ このようにしてプロトタイプフィルタの次数$N$が求まります。$N$は切り上げて整数とします。</description></item></channel></rss>